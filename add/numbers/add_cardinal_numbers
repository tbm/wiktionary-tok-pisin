#!/usr/bin/env python3

"""
Create cardinal numbers for Tok Pisin
"""

import csv

from num2words import num2words
import pywikibot


TPI2EN = {
    "et": "eight",
    "etpela ten": "eighty",
    "faipela ten": "fifty",
    "faiv": "five",
    "faivpela ten": "fifty",
    "foa": "four",
    "fopela ten": "forty",
    "handet": "hundred",
    "nain": "nine",
    "nainpela ten": "ninety",
    "seven": "seven",
    "sevenpela ten": "seventy",
    "sikis": "six",
    "sikispela ten": "sixty",
    "tausen": "thousand",
    "ten": "ten",
    "tri": "three",
    "tripela ten": "thirty",
    "tu": "two",
    "tupela ten": "twenty",
    "wan": "one",
    "wanpela ten": "ten",  # how to handle this? "wanpela tan" is only used by 1x
}


def create_compound(tpi):
    """ "
    Create a compound template from a phrase
    """
    text = "{{compound|tpi"
    # Horrible hack to avoid "FOOpela ten" not being split
    tpi = tpi.replace("pela ", "pela_")
    for num, term in enumerate(tpi.split(), 1):
        term = term.replace("_", " ")
        text += "|" + term + "|" + "t" + str(num) + "=" + TPI2EN[term]
    text += "}}"
    return text


def create_entry(number, tpi, english):
    """
    Create Tok Pisin entry for Wiktionary.
    """
    if number < 100:
        ety = "From " + create_compound(tpi) + "."
    else:
        ety = (
            "From {{der|tpi|en|"
            + english
            + "}}. Equivalent to "
            + create_compound(tpi)
            + "."
        )
    alt = ""
    if "faivpela" in tpi:
        alt = tpi.replace("faivpela", "faipela")
        alt = f"""
===Alternative forms===
* {{{{alter|tpi|{alt}}}}}
"""

    entry = f"""==Tok Pisin==
{{{{number box|tpi|{number}}}}}
{alt}
===Etymology===
{ety}

===Numeral===
{{{{head|tpi|numeral}}}}

# {{{{cln|tpi|cardinal numbers}}}} [[{english}]]
"""

    if number < 100:
        entry += """
====Coordinate terms====
{{tpi-cardinals}}
"""
    return entry


def add_entry(page, entry):
    """
    Create page on Wiktionary
    """
    if page.exists():
        print(f"Page {page} exists")
        return
    page.text = entry
    page.save(entry, minor=False)


def get_numbers():
    """
    Read numbers from CSV file.
    """
    with open("numbers.csv", "r", encoding="utf-8") as csvfile:
        csvreader = csv.reader(csvfile, delimiter=",")
        for number, tpi in csvreader:
            number = int(number)
            yield number, tpi


def add_cardinal_numbers():
    """
    Create cardinal numbers for Tok Pisin
    """
    site = pywikibot.Site("en", "wiktionary")

    for number, tpi in get_numbers():
        # Skip 11-19 for now since Wiktionary has the English-derived
        # single words (twelv, tetin...)
        if number < 20:
            continue
        english = num2words(number, lang="en")
        entry = create_entry(number, tpi, english)
        page = pywikibot.Page(site, tpi)
        if page.exists():
            print(f"Page {page} exists")
            continue
        print("Creating", page.title())
        print(entry)
        edit = input("Create page (Y/n): ")
        if not edit.upper() == "N":
            add_entry(page, entry)


if __name__ == "__main__":
    add_cardinal_numbers()
